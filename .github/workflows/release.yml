name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux - using musl for static linking and better compatibility
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: git-profile-rs
            asset_name: git-profile-rs-linux-amd64
            use_cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            artifact_name: git-profile-rs
            asset_name: git-profile-rs-linux-arm64
            use_cross: true
          
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: git-profile-rs
            asset_name: git-profile-rs-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: git-profile-rs
            asset_name: git-profile-rs-macos-arm64
          
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: git-profile-rs.exe
            asset_name: git-profile-rs-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build with cargo
        if: matrix.use_cross != true
        run: cargo build --release --target ${{ matrix.target }} --features vendored-openssl

      - name: Build with cross
        if: matrix.use_cross == true
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --features vendored-openssl

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream